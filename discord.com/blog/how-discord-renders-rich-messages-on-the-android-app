<!DOCTYPE html><!-- Last Published: Mon Nov 21 2022 18:35:28 GMT+0000 (Coordinated Universal Time) --><html data-wf-domain="discordpages.webflow.io" data-wf-page="6102fadda3eb27bb56da0f57" data-wf-site="5f8dd67f8fdd6f51f0b50904"><head><meta charset="utf-8"/><title>How Discord Renders Rich Messages on the Android App</title><meta content="" name="description"/><meta content="How Discord Renders Rich Messages on the Android App" property="og:title"/><meta content="" property="og:description"/><meta content="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/612417da1b3daba08042018a_1_00kEvmqaOlUCqDuGXc-lkA.png" property="og:image"/><meta content="How Discord Renders Rich Messages on the Android App" property="twitter:title"/><meta content="" property="twitter:description"/><meta content="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/612417da1b3daba08042018a_1_00kEvmqaOlUCqDuGXc-lkA.png" property="twitter:image"/><meta property="og:type" content="website"/><meta content="summary_large_image" name="twitter:card"/><meta content="width=device-width, initial-scale=1" name="viewport"/><link href="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/css/discordpages.ece25cbbf.css" rel="stylesheet" type="text/css"/><!--[if lt IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js" type="text/javascript"></script><![endif]--><script type="text/javascript">!function(o,c){var n=c.documentElement,t=" w-mod-";n.className+=t+"js",("ontouchstart"in o||o.DocumentTouch&&c instanceof DocumentTouch)&&(n.className+=t+"touch")}(window,document);</script><link href="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/60ae916347747e71167e21cc_favicon.png" rel="shortcut icon" type="image/x-icon"/><link href="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/5f91fae62cc821206588b837_Frame%20246.png" rel="apple-touch-icon"/><link href="rss.xml" rel="alternate" title="RSS Feed" type="application/rss+xml"/><!-- Localize integration code -->
<script src="https://global.localizecdn.com/localize.js"></script>
<script src="../webflow-scripts/head.js"></script>
<style>
  .nav-bar-hack {
  	bottom: 0px !important;
    height: auto !important;
  }
  
  body a.w-webflow-badge {
    display: none !important;
  }
  
  body {
  	text-rendering: optimizeLegibility;
  }
  
  @media screen and (max-width: 476px) {
    .hide-on-mobile {
      display: none;
    }
  }
  
  .hr-style {
  border: 0;
  height: 8px;
  background-color: #F0F0F0;
  margin: 20px 0px;
  }
  
  .BlogBodyQuote {
  grid-column: 2/-1;
  font-size: 24px;
  line-height: 36px;
  padding: 0px 0px 15px 40px;
  font-style: italic;
  margin: 40px 0px 50px 0px;
}

.quote-text {
  width: 100%;
  margin-top: 10px;
}

.quote-icon {
  position: relative;
  top: 16px;
}

footer.quote-footer {
  font-size: 16px;
  margin-top: 20px;
  font-style: normal;
}
</style>

<style>
.language{
    display:flex;
    user-select: none;
}
.language .lang-container {
    position: relative;
}

.language .lang-selector-container {
    display: flex;
    align-items: center;
    cursor: pointer;
}

.language .locale-container{
    display: flex;
    align-items: center;
}

.language .flag {
    width: 24px;
    height: 16px;
    margin-right: 8px;
}

.language .selector-language-name{
    color: #fff;
    font-size: 14px;
    line-height: 18px;
}

.language .arrow-icon{
    padding-left: 8px;
}

.language .lang-dropdown-container {
    z-index: 10;
    bottom: 100%;
    margin-bottom: 8px;
    position: absolute;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 1px 1px rgb(0 0 0 / 10%);
    overflow: hidden;
    display: none;
}

.language .lang-dropdown {
    max-height: 320px;
    min-width: 150px;
    overflow-x: hidden;
    overflow-y: auto;
    overscroll-behavior: contain;
}

.language .dropdown-item{
    padding: 8px;
}

.language .dropdown-clickable{
    cursor: pointer;
}

.language .dropdown-language-name{
    color: #23272a;
    font-size: 14px;
    line-height: 18px;
}

.flag-ru{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4da57001e8f59b8a77_62cb46f39e6ac4c46ce39566_ru.png);
}

.flag-bg{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cdbc0dc0fb5f55e3098f_6257c2a1e7544e303083b2b1_bolg.png);
}
.flag-cs{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4c83827a1284afe239_62cb46f1254305732a01676d_cs.png);
}
.flag-da{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4ad6ee377e0df4cde6_62cb46f16128094022db6768_da.png);
}
.flag-de{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4aa35fe71fedf5e95f_62cb46f1c50496ce73c40d99_de.png);
}
.flag-en-GB {
    content:url("https://assets-global.website-files.com/6257adef93867e50d84d30e2/62d01c2078d11b68a1633276_Rectangle%201%20(3).svg");
}
.flag-el{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4ca5700115ec9b8a67_62cb46f17c26b5fe5a53876f_el.png);
}
.flag-en-US{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cdbc488f5f603e7ecd2a_6257bf8b5ba300233705a542_en.png);
}
.flag-en{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cdbc488f5f603e7ecd2a_6257bf8b5ba300233705a542_en.png);
}
.flag-es{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4b7670687b935aaed4_62cb46f14edab1b0029593fc_es-ES.png);
}
.flag-fi{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb48951dec0cce94a2b1_62cb46f1921c0cf82fc59da7_fi.png);
}
.flag-fr{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4a01339d451d474860_62cb46f1544a7ab7c66e9ccb_fr.png);
}
.flag-hi{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb47b3070262fdccd2a6_62cb46f13fcb6e76c05b504e_hi.png);
}
.flag-hr{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4764813ee14c33c45f_62cb46f1aeebe9064763c90c_hr.png);
}
.flag-hu{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb486b18c7334c564b9a_62cb46f19e6ac41dcce39561_hu.png);
}
.flag-it{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb47fcf6b11ce186dd29_62cb46f1bd099a25f8f77ea4_it.png);
}
.flag-ja{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb49fa4234bc13a595aa_62cb46f1e819841940bec47d_ja.png);
}
.flag-ko{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4b6b18c7266d564ba3_62cb46f125430509b9016776_ko.png);
}
.flag-lt{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4bc5fa8c17a80ae4c4_62cb46f14edab152b8959405_lt.png);
}
.flag-nl{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4d6b18c71a53564bac_62cb46f3e00ff80959abff2a_nl.png);
}
.flag-no{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4d29670fb8a9998a06_62cb46f37c26b5e22453877d_no.png);
}
.flag-pl{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4fd9e48ce2224e71b3_62cb46f3c504963019c40db7_pl.png);
}
.flag-pt-BR{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4d41e0514ceaeb0814_62cb46f3d809bc2503e62bec_pt-BR.png);
}
.flag-ro{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4b7b2666d9520e434e_62cb46f36e94d725ce411ab6_ro.png);
}
.flag-sv{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb5036a202f7044eb402_62cb46f49e6ac47674e39567_sv-SE.png);
}
.flag-th{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb502ab71d0c254b8e0c_62cb46f465c529bf26e211a1_th.png);
}
.flag-tr{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4f41e0515a89eb082a_62cb46f4e819848178bec4d1_tr.png);
}
.flag-uk{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4f36a20273d04eb401_62cb46f37c26b54f6a53877f_uk.png);
}
.flag-vi{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4f00801f3750f4834e_62cb46f4e819840d89bec4d2_vi.png);
}
.flag-zh-Hans{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb5010e73af938ef607e_62cb46f49e6ac45f35e39568_zh-CN.png);
}
.flag-zh-TW{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4fd354ea61ac8db41c_62cb46f33fcb6ea5c95b5069_zh-TW.png);
}
</style>

<style>
.btn-wrapper a {
  color: #fff ;
}
</style></head><body class="dont-translate"><div style="background-color:hsla(234.93506493506493, 85.56%, 64.71%, 1.00)" class="header-blue-blog wf-section"><div class="blog-navbar"><a href="discord-activities-play-games-and-watch-together" class="blog-brand-copy w-nav-brand"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/613b8fc3834b2bd42157bc04_blogwhite.svg" loading="lazy" alt="Discord"/></a><div data-collapse="medium" data-animation="over-right" data-duration="400" data-easing="ease" data-easing2="ease" role="banner" class="navbar-5 w-nav"><div class="container-790 w-container"><nav role="navigation" class="blog-nav w-nav-menu"><div data-delay="100" data-hover="true" class="w-dropdown"><div class="w-dropdown-toggle"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/635157e8f94a8580bcbb3e32_Shape.svg" loading="lazy" alt="" class="icon mobile"/><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/614275ac3d35134cb2a96b63_down.svg" loading="lazy" alt="" class="icon white"/><div class="blog-nav-item">COLLECTIONS</div></div><nav class="dropdown-list w-dropdown-list"><div class="w-dyn-list"><div role="list" class="w-dyn-items"><div role="listitem" class="w-dyn-item"><a href="../category/community" class="dropdown-link w-dropdown-link">Community</a></div><div role="listitem" class="w-dyn-item"><a href="../category/company" class="dropdown-link w-dropdown-link">Discord HQ</a></div><div role="listitem" class="w-dyn-item"><a href="../category/engineering" class="dropdown-link w-dropdown-link">Engineering &amp; Design</a></div><div role="listitem" class="w-dyn-item"><a href="../category/how-to-discord" class="dropdown-link w-dropdown-link">How to Discord</a></div><div role="listitem" class="w-dyn-item"><a href="../category/safety" class="dropdown-link w-dropdown-link">Policy &amp; Safety</a></div><div role="listitem" class="w-dyn-item"><a href="../category/product" class="dropdown-link w-dropdown-link">Product &amp; Features</a></div></div></div></nav></div><a href="../blog-featured" class="blog-nav-item w-nav-link">Featured</a><a href="https://discord.com/" class="blog-nav-item w-nav-link">Discord.com</a><div class="w-embed"><form action="https://discord.com/blog/search" class="form-search w-form" style="display: flex"><input type="search" class="text-field w-input" maxlength="256" name="query" placeholder="Search…" id="search" required=""><input type="submit" value="" class="btn-search w-button"></form></div><form action="https://discord.com/search" class="form-search w-form"><input type="search" class="text-field w-input" maxlength="256" name="query" placeholder="Search…" id="search" required=""/><input type="submit" value="" class="btn-search w-button"/></form></nav><div class="w-nav-button"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/60b6ad79b75c18f025626c71_menuicon.svg" loading="lazy" alt="Menu" class="image-14"/></div></div></div></div></div><div style="background-color:hsla(234.93506493506493, 85.56%, 64.71%, 1.00)" class="blog-home-hero-header wf-section"></div><div class="blog-featured-section wf-section"><div class="blog-hero-container hero-offset w-dyn-list"><div role="list" class="collection-list w-dyn-items"><div role="listitem" class="collection-item-4 w-dyn-item"><div class="div-block-15"><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/612417da1b3daba08042018a_1_00kEvmqaOlUCqDuGXc-lkA.png" loading="lazy" alt="" sizes="(max-width: 479px) 92vw, (max-width: 767px) 95vw, (max-width: 991px) 92vw, (max-width: 1919px) 91vw, 1368px" srcset="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/612417da1b3daba08042018a_1_00kEvmqaOlUCqDuGXc-lkA-p-500.png 500w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/612417da1b3daba08042018a_1_00kEvmqaOlUCqDuGXc-lkA-p-800.png 800w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/612417da1b3daba08042018a_1_00kEvmqaOlUCqDuGXc-lkA-p-1080.png 1080w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/612417da1b3daba08042018a_1_00kEvmqaOlUCqDuGXc-lkA.png 2500w" class="image-19"/></div><div class="blog-hero-heading-section"><a href="../category/engineering" class="blog-hero-category">Engineering &amp; Design</a><a href="how-discord-renders-rich-messages-on-the-android-app" aria-current="page" class="blog-hero-heading w--current">How Discord Renders Rich Messages on the Android App</a></div></div></div></div></div><div class="blog-post-container wf-section"><div class="column-wrapper w-row"><div class="column-3 w-col w-col-2 w-col-stack"><div class="the-author-section"><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61391c30ecd0f01da4438012_picature.jpg" loading="lazy" width="72" alt="" sizes="72px" srcset="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61391c30ecd0f01da4438012_picature-p-500.jpeg 500w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61391c30ecd0f01da4438012_picature-p-800.jpeg 800w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61391c30ecd0f01da4438012_picature-p-1080.jpeg 1080w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61391c30ecd0f01da4438012_picature.jpg 1115w" class="image-22"/><div><div class="blog-post-author">Andy Garron</div><div class="blog-post-author-name">March 27, 2018</div></div></div><div class="tag-section w-condition-invisible"><div class="divider-bar-copy"></div><div class="tags-sections-head">Tags</div><div class="collection-list-wrapper-2 w-dyn-list"><div class="empty-state w-dyn-empty"></div></div></div></div><div class="column-4 w-col w-col-8 w-col-stack"><div id="heading-1" class="rich-wrapper"><div class="blog-post-content w-richtext"><p>Discord’s chat messages support both <a href="https://support.discordapp.com/hc/en-us/articles/210298617-Markdown-Text-101-Chat-Formatting-Bold-Italic-Underline-" target="_blank">markdown</a> and direct mentions of users, roles, channels, and various other entities. Detecting and rendering rich content in messages is a more complex challenge than it may appear on the surface.</p><p>This post will detail how our clients detect and render markdown and entity mentions in messages. In particular, the Discord Android app required a homegrown solution to maintain parity with the Desktop and iOS clients. As a result, we’ve open-sourced <a href="https://github.com/discordapp/simpleast" target="_blank">SimpleAST</a>, our Android parsing and rendering solution. Read on to learn more about Discord’s approach to rich messages, and how we solve this challenge on Android!</p><h2>simple-markdown to the rescue</h2><p>One issue of particular interest is the case of entity mentions, i.e. direct references to users, roles, or channels. In these cases, we want messages to reflect name changes. For example, a message may mention me: <strong>@AndyG. </strong>If I decide to change my name to <strong>xXSSJ4AndyGXx</strong>, this old message should now render as <strong>@xXSSJ4AndyGXx </strong>instead.</p><p>To accomplish this, we avoid sending <strong>@AndyG</strong> as raw text in the message. Instead, we send &lt;@123456789&gt;, a reference to my user ID. This puts the burden on the receiving-end Discord clients to detect mentions in messages, and transform them back into the appropriate username when rendering the message.</p><p>In order to do so, our clients need a parsing + rendering system that that satisfies three major requirements:</p><ol role="list"><li><strong>Extensibility</strong>: the system must detect basic markdown (like *<em>italics*</em> and <strong>**bold**</strong>) as well as artisanal strategies like the @<strong>User</strong> mention described above.</li><li><strong>Structure</strong>: the system should lend structure to the otherwise unstructured raw text. With structure, the messages can be inspected and post-processed as we see fit.</li><li><strong>Performance</strong>: gotta go fast.</li></ol><p>We found a solution in <strong>Khan Academy’s open-source </strong><a href="https://github.com/Khan/simple-markdown" target="_blank"><strong>simple-markdown</strong></a><strong> library. </strong>The web, desktop, and iOS versions of the Discord app are all written in JavaScript, so simple-markdown could be used directly.</p><p>The simple-markdown process looks like this:</p><ol role="list"><li>Clients define a list of <strong>rules </strong>which define the various formatting and entities (like an <strong>@User </strong>mention) that can appear in text. This meets our <strong>extensibility</strong> requirement.</li><li>The simple-markdown <strong>parser </strong>uses that list of rules to transform raw text into an <strong>Abstract Syntax Tree (AST). </strong>This meets our <strong>structure </strong>requirement.</li><li>The generated <strong>AST </strong>is then passed into a <strong>renderer</strong>,<strong> </strong>where it is transformed<strong> </strong>into some format that the client can display and interact with.</li></ol><p>By adding our own rules, we can support various types of rich content in messages:</p><figure class="w-richtext-align-center"><div><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/612417e2bbcfa0d83f49cfdf_1*ChNBPlV04DvH0-oxMvYX6Q.png" alt=""/></div><figcaption>These rules are made NOT to be broken (we hope).</figcaption></figure><h2><strong>Do Androids Dream of Feature Parity?</strong></h2><p><strong>simple-markdown</strong> worked great for the Discord desktop and iOS clients, but left our Android app out in the cold, since our Android app is built natively, not React Native (as discussed in a <a href="https://blog.discordapp.com/using-react-native-one-year-later-91fd5e949933" target="_blank">previous blog post</a>). Without a parser of our own, we could still easily replace entities like <strong>@User</strong> mentions with a find/replace to detect <strong>&lt;@123456789&gt; </strong>occurrences when rendering the message.<strong> </strong>In fact, the Android app functioned like this for some time in 2016. Certain problems proved extremely difficult to solve, however:</p><ul role="list"><li>With our naive regexes on Android, there were many rendering inconsistencies between the Android app and our other clients. For example, formatting (like <strong>**bold**</strong>)<strong> </strong>worked inside of **code blocks** — it shouldn’t.</li><li>We were not able to directly port the parser rules from the Desktop client. Any time Discord added a new rule, we had to worry about introducing weird edge-cases on Android, or at least losing parity.</li><li>Discord’s desktop search feature allows for structured query parameters like <strong>from:</strong> AndyG#0001 (among others). We were about to implement search on Android and we knew that leaning on a robust parser would make it easier to detect and use such structured parameters.</li></ul><p>The writing was on the wall: if we were going to maintain parity without excessive engineering effort, we were going to need our own version of simple-markdown that ran on the JVM to power our Android app.</p><h3>The One Where Chandler Explains Parsing</h3><p>Remember that the system we wanted would need to do two things:</p><ol role="list"><li><strong>Parse</strong> raw text into an <a href="https://en.wikipedia.org/wiki/Abstract_syntax_tree" target="_blank">Abstract Syntax Tree</a></li><li><strong>Render</strong> that AST as text on Android</li></ol><p>We’ll focus on <strong>parsing</strong> for now. Remember the three components that constitute the parse step:</p><ol role="list"><li>Node : a node in an AST which can have children. This defines how we represent an AST in code</li><li>Rule : a rule which defines what types of nodes are generated by what types of text</li><li>Parser : using a list of rules, takes raw text and turns it into a collection of nodes</li></ol><div class="w-embed w-iframe"><center>
<iframe src='https://gfycat.com/ifr/DirectReadyGuineafowl' frameborder='0' scrolling='no' allowfullscreen width='640' height='669'></iframe></div><p>Note that the<strong> </strong>Parser processes the input<strong> left-to-right</strong> as rules are matched. To support that, a Pattern that defines a Rule MUST only match with text at the BEGINNING of the source. This is why we include the ^ character at the beginning of all of our Rule patterns!</p><p><strong>Hello StackOverflowException, My Old Friend</strong></p><p>Our Rule interface required each Rule to return a Node with all its children <em>already</em> parsed and populated. To accomplish this, many Rule instances were calling parser.parse() on the text they were inspecting. This algorithm was simple to understand, but meant we could <strong>recurse arbitrarily deeply</strong> if we nested formatting. In other words, nest enough formatting in a message, and you could trivially crash the app by causing a <strong>stack overflow</strong>!</p><p>We needed Rule instances to contribute their information to the AST <strong>without recursively parsing</strong> their content. We solved this by having each Rule return only a single top-level Node. If it was a non-terminal Node (like a bold or italics node), it would also specify start and end indices that inform the Parser what slice of the original input needs to be parsed to supply that node’s children. In other words, our rules now return both a Node and a potential “deferred parse” specified in a ParseSpec class.</p><p>This allows us to change our parse strategy to use an explicit 🥞 stack 🥞 that tracks what parsing still needs to be done. The stack typically does not grow larger than a few elements in practice, as new ParseSpec instances are used immediately. For implementation details, see the source code <a href="https://github.com/angarron/SimpleAST/blob/unroll/simpleast-core/src/main/java/com/agarron/simpleast_core/parser/Parser.kt#L24" target="_blank">here</a>.</p><h3>Performance Analysis</h3><p>The app functioned with this parser for a very long time. We still noticed a little chug on older phones (which represent a significant portion of our user base), but it wasn’t immediately obvious where any performance improvements could be squeezed out of the parser.</p><p>We used the <a href="https://developer.android.com/studio/profile/android-profiler.html" target="_blank">Android Profiler</a> (introduced last year in Android Studio 3.0), which provides a <a href="https://developer.android.com/studio/profile/cpu-profiler.html#flame_chart" target="_blank">flame chart</a> that aggregates method calls into a readable form that makes it easier to see where you are spending your computational time. We noticed that a lot of time was spent in the method Pattern.matcher(), which creates a new Matcher instance:</p><figure class="w-richtext-align-center"><div><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/612417e38c28be0f2fb2ddab_1*Gncnw27JyiIKtCUwB0QMyA.png" alt=""/></div><figcaption>Flame chart showing the impact of Pattern.matcher()</figcaption></figure><p>It appeared that most of our time during a parse was actually spent inside of Matcher.&lt;init&gt;, in particular in Matcher.usePattern, with some time in Matcher.reset. It was strange to spend a lot of time here — why were we creating so many Matcher instances? We looked around for initialization points of Matcher, and the culprit lay in <a href="https://gist.github.com/angarron/bee8744ae18bd5fdd128b6f7a2dfba12#file-parser-kt-L11" target="_blank">this line</a> of theParser:</p><p>// Create a new Matcher instance for the source being inspected<br/>val matcher = rule.pattern.matcher(mutableSource)</p><p>Instantiating a Matcher every time we want to use a rule to inspect the text was expensive and, as it turns out, unnecessary:Matcher has a method that is specifically designed to allow a single instance to be reused multiple times on different sources.</p><p>Up until this point, we had bundled Pattern instances inside our Rule objects. Thanks to the Android Profiler, we identified this issue and began bundling prebuiltMatcher instances instead:</p><p>// Use the existing Matcher, just point it at the new source<br/>val matcher = rule.matcher.reset(mutableSource)</p><p>Using this strategy, we were able to see as much as a <strong>2.4x</strong> speedup on certain real-world messages, depending on the complexity of the parse parsing needed to be done.</p><p><strong>Warning:</strong> If Rule (and by extension, Parser) instances are shared across threads, multiple threads could reset the same Matcher to different source texts. Therefore, usages of a given Rule or Parser instance should be confined to a single thread.</p><h3><strong>Will it rend?</strong></h3><p>We’ve got an AST now with nodes that represent various pieces of text, styles, and other entities like user mentions, emojis, etc.</p><p>Rendering is a simple process compared to parsing. Android has a mechanism for building text with various styles: a SpannableStringBuilder. We create a <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder.html" target="_blank">SpannableStringBuilder</a> and pass it to each node; they operate on the builder in turn. To facilitate this, a Node&lt;T&gt; in SimpleAST has the following method:</p><p>fun render(builder: SpannableStringBuilder, renderContext: T)</p><ul role="list"><li>In simple cases, nodes may simply append text to the builder, apply styles to the text in the builder, or make the text clickable or otherwise interactable.</li><li>In more complex cases, nodes may specify a type T that provides information that they need in order to render themselves, ie.e. their renderContext. This could be something as simple as and Android Context so that the node can resolve resources, or it could be a data structure that, for example, facilitates the node looking up usernames for a given user ID.</li></ul><div class="w-embed w-iframe"><center>
<iframe src='https://gfycat.com/ifr/LegitimateBogusBlackbird' frameborder='0' scrolling='no' allowfullscreen width='640' height='572'></iframe><p> <a href="https://gfycat.com/legitimatebogusblackbird">via Gfycat</a></p></div><h3>Marching Ever Onward To Tomorrow</h3><p>SimpleAST currently powers the Android app’s message rendering, and we’re happy with its performance, robustness, and extensibility. It also lends us the power to keep up with the fast-changing requirements of Discord as a product, since porting parser rules to Android is such a breeze.</p><p>That said, there are some opportunities we see with both SimpleAST and its use in our app going forward:</p><ul role="list"><li><strong>Parse off the UI thread: </strong>We parse and render each message <strong>on the UI thread </strong>on-demand as the message rendered on the screen. This means that during fast scrolls, there can be a noticeable frame drop, especially on low-end devices. Instead, we could parse the messages at an earlier stage in the pipeline, on a thread pool dedicated to parsing these messages. The upside is<strong> </strong>that this would make the scrolling experience butter-smooth on all devices. However, if implemented naively,<strong> </strong>it could manifest as a longer load-time for batch messages loading. Intelligently implementing message parsing off the UI thread is one of the most exciting opportunities for performance improvements in the Android app today.</li><li><strong>Further SimpleAST performance improvements: </strong>We will continue to push more performance out of the SimpleAST library, with a helping hand from the Android Profiler.</li></ul><p><em>We’re always looking for the next great addition to our engineering teams at Discord. If the problems described here sound interesting to you, and especially if you are a gamer at heart, </em><a href="https://discordapp.com/jobs" target="_blank"><em>check out our available positions here</em></a><em>.</em></p><p><em>If you would like to use or contribute to SimpleAST, check out the open source project </em><a href="https://github.com/discordapp/simpleast" target="_blank"><em>here</em></a><em>.</em></p></div></div><div class="btn-wrapper w-condition-invisible"><a href="how-discord-renders-rich-messages-on-the-android-app#" class="btn-blog w-dyn-bind-empty w-button"></a></div><div id="heading-2" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-3" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-4" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-5" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-6" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-7" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-8" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-9" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-10" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div></div><div data-w-id="507df21e-7107-68af-2f54-b8d93479cf10" class="column-desctop w-condition-invisible w-col w-col-2 w-col-stack"><div class="rich-content-right"><div class="paragraph-medium bot-marg">Contents</div><a href="how-discord-renders-rich-messages-on-the-android-app#heading-1" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-renders-rich-messages-on-the-android-app#heading-2" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-renders-rich-messages-on-the-android-app#heading-3" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-renders-rich-messages-on-the-android-app#heading-4" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-renders-rich-messages-on-the-android-app#heading-5" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-renders-rich-messages-on-the-android-app#heading-6" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-renders-rich-messages-on-the-android-app#heading-7" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-renders-rich-messages-on-the-android-app#heading-8" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-renders-rich-messages-on-the-android-app#heading-9" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-renders-rich-messages-on-the-android-app#heading-10" class="title-menu-anchor w-dyn-bind-empty"></a></div></div></div><div class="divider-bar"></div><div class="w-row"><div class="w-col w-col-3 w-col-medium-6"><div class="author-title">THE AUTHOR</div></div><div class="w-col w-col-9 w-col-medium-6"><div class="the-author-section footer"><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61391c30ecd0f01da4438012_picature.jpg" loading="lazy" width="47" alt="" sizes="96px" srcset="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61391c30ecd0f01da4438012_picature-p-500.jpeg 500w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61391c30ecd0f01da4438012_picature-p-800.jpeg 800w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61391c30ecd0f01da4438012_picature-p-1080.jpeg 1080w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61391c30ecd0f01da4438012_picature.jpg 1115w" class="blog-post-author-image-footer"/><div><div class="blog-post-author-footer">Andy Garron</div><div class="blog-post-author-desc">grudging programmer, still</div></div></div></div></div><div class="divider-bar"></div><div><div class="author-title">MORE FROM</div><div class="category-title-footer">Engineering &amp; Design</div><div class="footer-more-from w-dyn-list"><div role="list" class="featured-small-list w-dyn-items w-row"><div role="listitem" class="collection-item-small w-dyn-item w-col w-col-4"><a href="how-data-science-informs-strategy-innovation-at-discord" class="link-block-4 w-inline-block"><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61fc38b519cf1b6213676d5d_202201002_COM_DataScienceBlog_1800x720.png" loading="lazy" alt="" sizes="(max-width: 479px) 83vw, (max-width: 767px) 90vw, (max-width: 991px) 29vw, (max-width: 1919px) 30vw, 434.6640625px" srcset="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61fc38b519cf1b6213676d5d_202201002_COM_DataScienceBlog_1800x720-p-500.png 500w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61fc38b519cf1b6213676d5d_202201002_COM_DataScienceBlog_1800x720-p-800.png 800w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61fc38b519cf1b6213676d5d_202201002_COM_DataScienceBlog_1800x720-p-1080.png 1080w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61fc38b519cf1b6213676d5d_202201002_COM_DataScienceBlog_1800x720-p-1600.png 1600w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61fc38b519cf1b6213676d5d_202201002_COM_DataScienceBlog_1800x720.png 1800w" class="blog-featured-small-image"/></a><a href="../category/engineering" class="blog-hero-category">Engineering &amp; Design</a><a href="how-data-science-informs-strategy-innovation-at-discord" class="link-block-20 w-inline-block"><div class="blog-featured-title-small">How Data Science Informs Strategy &amp; Innovation at Discord</div></a></div><div role="listitem" class="collection-item-small w-dyn-item w-col w-col-4"><a href="why-and-how-discord-uses-patch-to-test-elixir" class="link-block-4 w-inline-block"><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61aa7642a72a1b627d695f49_Discord-Elixir-Blog-Header.png" loading="lazy" alt="" sizes="(max-width: 479px) 83vw, (max-width: 767px) 90vw, (max-width: 991px) 29vw, (max-width: 1919px) 30vw, 434.6640625px" srcset="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61aa7642a72a1b627d695f49_Discord-Elixir-Blog-Header-p-500.png 500w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61aa7642a72a1b627d695f49_Discord-Elixir-Blog-Header-p-800.png 800w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61aa7642a72a1b627d695f49_Discord-Elixir-Blog-Header.png 1800w" class="blog-featured-small-image"/></a><a href="../category/engineering" class="blog-hero-category">Engineering &amp; Design</a><a href="why-and-how-discord-uses-patch-to-test-elixir" class="link-block-20 w-inline-block"><div class="blog-featured-title-small">Why and How Discord Uses Patch to Test Elixir</div></a></div><div role="listitem" class="collection-item-small w-dyn-item w-col w-col-4"><a href="how-discord-creates-insights-from-trillions-of-data-points" class="link-block-4 w-inline-block"><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated.png" loading="lazy" alt="" sizes="(max-width: 479px) 83vw, (max-width: 767px) 90vw, (max-width: 991px) 29vw, (max-width: 1919px) 30vw, 434.6640625px" srcset="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated-p-500.png 500w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated-p-1080.png 1080w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated-p-1600.png 1600w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated-p-2000.png 2000w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated.png 2500w" class="blog-featured-small-image"/></a><a href="../category/engineering" class="blog-hero-category">Engineering &amp; Design</a><a href="how-discord-creates-insights-from-trillions-of-data-points" class="link-block-20 w-inline-block"><div class="blog-featured-title-small">How Discord Creates Insights from Trillions of Data Points</div></a></div></div></div></div></div><div class="section footer wf-section"><div class="w-layout-grid grid-f"><div id="w-node-_2c491f7c-a0f7-123b-2ff5-89166f6e8926-6f6e8924" class="footer-title"><h2 class="footer-title-text">Imagine a place</h2><div class="language"><div class="lang-container"><div id="locale-dropdown" class="lang-dropdown-container"><div class="lang-dropdown"></div></div><div class="lang-selector-container"><div class="locale-container"><img src="https://assets-global.website-files.com/plugins/Basic/assets/placeholder.60f9b1840c.svg" loading="lazy" alt="" class="flag"/><div class="selector-language-name"></div></div><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/631e41a9c664e8212a6ae94b_arrow.svg" loading="lazy" alt="" class="arrow-icon"/></div></div></div><div class="div-block-24"></div><div><a href="https://twitter.com/discord" class="w-inline-block"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/5f8ff4ffa222a56c0ac1f753_twitter.svg" loading="lazy" alt="" class="image-3"/></a><a href="https://www.instagram.com/discord/" class="w-inline-block"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/5f8ff4ff67595747f2e29eee_instagram.svg" loading="lazy" alt="" class="image-3"/></a><a href="https://www.facebook.com/discord/" class="link-block-23 w-inline-block"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/5f8ff4ff12dd361cb2329600_facebook.svg" loading="lazy" alt="" class="image-3"/></a><a href="https://www.youtube.com/discord/" class="w-inline-block"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/5f8ff4ff82203334500c932f_youtube.svg" loading="lazy" alt="" class="image-3"/></a><a href="https://www.tiktok.com/@discord" class="w-inline-block"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6374a1bf7602dc14503d942a_Tiktok%20(1).svg" loading="lazy" alt="" class="image-3"/></a></div></div><div id="w-node-_2c491f7c-a0f7-123b-2ff5-89166f6e8929-6f6e8924" class="footer-link-group"><div class="footer-link"><div class="footer-link-caption">Product</div><a href="https://discord.com/download" class="footer-link-item">Download</a><a href="https://discord.com/nitro" class="footer-link-item">Nitro</a><a href="https://discordstatus.com/" class="footer-link-item">Status</a></div><div class="footer-link"><div class="footer-link-caption">Company</div><a href="https://discord.com/company" class="footer-link-item">About</a><a href="../jobs" class="footer-link-item">Jobs</a><a href="https://discord.com/branding" class="footer-link-item">Branding</a><a href="https://discord.com/newsroom" class="footer-link-item">Newsroom</a></div></div><div id="w-node-_2c491f7c-a0f7-123b-2ff5-89166f6e8946-6f6e8924" class="footer-link-group"><div class="footer-link"><div class="footer-link-caption">Resources</div><a href="https://discord.com/college" class="footer-link-item">College</a><a href="https://support.discord.com/hc/en-us" class="footer-link-item">Support</a><a href="https://discord.com/safetycenter" class="footer-link-item">Safety</a><a href="discord-activities-play-games-and-watch-together" class="footer-link-item">Blog</a><a href="https://feedback.discord.com/" class="footer-link-item">Feedback</a><a href="../build" class="footer-link-item">Developers</a><a href="../brand-new/streamkit" class="footer-link-item">StreamKit</a></div><div class="footer-link"><div class="footer-link-caption">Policies</div><a href="../terms" class="footer-link-item">Terms</a><a href="https://discord.com/privacy" class="footer-link-item">Privacy</a><a href="https://discord.com/guidelines" class="footer-link-item">Guidelines</a><a data-open-cookie-settings="true" href="how-discord-renders-rich-messages-on-the-android-app#" class="footer-link-item">Cookie Settings</a><a href="https://discord.com/acknowledgements" class="footer-link-item">Acknowledgements</a><a href="https://discord.com/licenses" class="footer-link-item">Licenses</a><a href="../moderation" class="footer-link-item">Moderation</a></div></div></div><div class="footer-divider"></div><div class="footer-bar"><a href="https://discord.com" class="w-inline-block"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/60ae8db338d6025407c54d24_Logo.svg" loading="lazy" alt="Discord" class="logo-2"/></a><a href="how-discord-renders-rich-messages-on-the-android-app#" class="button mobile footer-open-discord-button footer-open-discord-button-js w-button">Download</a><a href="how-discord-renders-rich-messages-on-the-android-app#" class="button desktop footer-open-discord-button footer-open-discord-button-js w-button">Open Discord</a></div></div><script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=5f8dd67f8fdd6f51f0b50904" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script><script src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/js/discordpages.6a1e691d1.js" type="text/javascript"></script><!--[if lte IE 9]><script src="//cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif]--><script type="text/javascript" src="../w/loader/loader.js" async defer></script>
<script src="../webflow-scripts/bodyEnd.js" defer async></script>
<script>
  function initDownloadButton() {
    let userAgent = window.navigator.userAgent,
        platform = window.navigator.platform,
        macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],
        windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],
        iosPlatforms = ['iPhone', 'iPad', 'iPod'],
        buttonAttributes = null;

    if (iosPlatforms.indexOf(platform) !== -1) {
      buttonAttributes = {
        text: "Download on the App Store",
        href: "https://itunes.apple.com/us/app/discord-chat-for-games/id985746746",
      }
    } else if (macosPlatforms.indexOf(platform) !== -1) {
      buttonAttributes = {
        text: "Download for Mac",
        href: "https://discord.com/api/download?platform=osx",
      }
    } else if (windowsPlatforms.indexOf(platform) !== -1) {
      buttonAttributes = {
        text: "Download for Windows",
        href: "https://discord.com/api/download?platform=win",
      }
    } else if (/Android/.test(userAgent)) {
      buttonAttributes = {
        text: "Download on Google Play",
        href: "https://play.google.com/store/apps/details?id=com.discord",
      }
    } else if (!os && /Linux/.test(platform)) {
      buttonAttributes = {
        text: "Download for Linux",
        href: "https://discord.com/api/download?platform=linux",
      }
    }

	let downloadEl = document.querySelectorAll(".download-button");
    if (downloadEl) {
      downloadEl.forEach(function(el) {
        el.innerText = buttonAttributes.text;
        el.href = buttonAttributes.href;
      });
    }

	let downloadSidebarEl = document.querySelectorAll(".download-sidebar");
    if (downloadSidebarEl) {
      downloadSidebarEl.forEach(function(el) {
        el.href = buttonAttributes.href;
      });
    }
  }
  
  function initLogInOrOpenDiscordButton() {
    let loginButtonText, loginRoute, signUpButtonText, signupRoute;
    let loginIsOpenDiscordButton = true;
    const loginLink = 'https://discord.com/login';
    const signupLink = 'https://discord.com/register';
    const openLink = 'https://discord.com/channels/@me';
    
    if(window.localStorage.getItem("token") != null) {
      loginButtonText = "Open Discord";
      loginRoute = openLink;
      loginIsOpenDiscordButton = true;
      
      signUpButtonText = "Open Discord";
      signupRoute = openLink;
    } else {
      loginIsOpenDiscordButton = false;
      loginButtonText = "Login";
      signUpButtonText = "Sign up";
      loginRoute = loginLink;
      signupRoute = signupLink;
    }
    
    let loginEl = document.querySelectorAll(".login-button-js");
    let footerEl = document.querySelectorAll(".footer-open-discord-button-js");
    if (loginEl && loginEl.length > 0) {
      loginEl.forEach(function(el) {
        if (!loginIsOpenDiscordButton) {
        	el.classList.add('hide-on-mobile');
        }
        el.innerText = loginButtonText;
      	el.href = loginRoute;
        if (loginIsOpenDiscordButton) {
            el.dataset.trackNav = 'navbar-open-button';
        }
      });
    }
    if (footerEl && footerEl.length > 0) {
      footerEl.forEach(function(el) {
        if (window.innerWidth <= 768) {
        	el.innerText = "Download";
        } else {
        	el.innerText = signUpButtonText;
        }
        el.href = signupRoute;
      });
    }
  }
  
  function initSignUpOrOpenButtons() {
    const signupLink = 'https://discord.com/register';
    const openLink = 'https://discord.com/channels/@me';
    const isLoggedIn = window.localStorage.getItem("token") != null;
    const buttonEl = document.querySelectorAll(".open-or-signup-js");
    
    if (buttonEl && buttonEl.length > 0) {
        buttonEl.forEach(function(el) {
            if (isLoggedIn) {
                el.innerText = 'Open Discord';
                el.href = openLink;
            } else {
                el.innerText = 'Sign up';
                el.href = signupLink;
            }
        });
    }
  }
  
  initSignUpOrOpenButtons();
  initLogInOrOpenDiscordButton();
  initDownloadButton();
</script>


<!-- build:inlineScriptNonceTag -->
  <script>
  <!-- endbuild -->
  </script>
  <!-- section:dataLayer -->
  <script src="https://discord.com/assets/oneTrust/v4/scripttemplates/otSDKStub.js" type="text/javascript" charset="UTF-8" data-domain-script="04da1d72-0626-4fff-b3c6-150c719cc115"></script>
  <!-- build:inlineScriptNonceTag -->
  <script>
    <!-- endbuild -->
    window.dataLayer = window.dataLayer || [];
    window.dataLayer.push({ 'allCookiesOK': false });
  </script>
  <!-- endsection -->
  <!-- section:gtm -->
  <!-- build:inlineScriptNonceTag -->
  <script>
  <!-- endbuild -->
    (function (w, d, s, l, i) {
      w[l] = w[l] || []; w[l].push({
        'gtm.start':
          new Date().getTime(), event: 'gtm.js'
      }); var f = d.getElementsByTagName(s)[0],
        j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
          'https://www.googletagmanager.com/gtm.js?id=' + i + dl + '&gtm_auth=GI0g9O-54_SitcgmxQKxlA&gtm_preview=env-2&gtm_cookies_win=x'; f.parentNode.insertBefore(j, f);
    })(window, document, 'script', 'dataLayer', 'GTM-N7BVC2W');
    !function (b, e, f, g, a, c, d) { b.fbq || (a = b.fbq = function () { a.callMethod ? a.callMethod.apply(a, arguments) : a.queue.push(arguments) }, b._fbq || (b._fbq = a), a.push = a, a.loaded = !0, a.version = "2.0", a.queue = [], c = e.createElement(f), c.async = !0, c.src = g, d = e.getElementsByTagName(f)[0], d.parentNode.insertBefore(c, d)) }(window, document, "script", "https://connect.facebook.net/en_US/fbevents.js");
    fbq("init", "550821025425262");
  </script>
  <!-- endsection --><script type="application/ld+json">
{ 
 "@context": "http://schema.org", 
 "@type": "BlogPosting",
 "headline": "How Discord Renders Rich Messages on the Android App",
 "image": "https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/612417da1b3daba08042018a_1_00kEvmqaOlUCqDuGXc-lkA.png",
 "publisher": "Discord",
 "url": "https://discord.com/blog/how-discord-renders-rich-messages-on-the-android-app",
 "datePublished": "Aug 23, 2021",
 "dateCreated": "Aug 23, 2021",
 "dateModified": "Aug 23, 2021",
 "description": "",
   "author": {
    "@type": "Person",
    "name": "Andy Garron"
  }
 }
</script><script nonce="MTQyLDE0MCw2NSwyMSw0Miw2MSwxODIsNjg=">(function(){var js = "window['__CF$cv$params']={r:'76fbeebd7f45c6b9',m:'aAXsRPLT_SvvIR_IHBwEDjJVHi8Q.eOyRtU3Nk8XkwM-1669395542-0-Acnaozlk7gtZIr6qF8xi6VWAtX9XhBRXaawLM2uIFCKL8Nrs2wx9QIbdQvXJiEn/UKhEopWAFjrvkcNs1vz8ouOvbcp+NfDgUWikiczFjI4q9tJsmJMosi52uQ1Nbbq+jVZiJ56l0i9VPIe4j9E17zSZhzOWhMGvaMNLYbLE8STogB+kjmeT2CZjwaM+CQGjhA==',s:[0xa9c5baa15e,0x81cc554b4c],u:'/cdn-cgi/challenge-platform/h/b'};var now=Date.now()/1000,offset=14400,ts=''+(Math.floor(now)-Math.floor(now%offset)),_cpo=document.createElement('script');_cpo.nonce='MTQyLDE0MCw2NSwyMSw0Miw2MSwxODIsNjg=',_cpo.src='/cdn-cgi/challenge-platform/h/b/scripts/alpha/invisible.js?ts='+ts,document.getElementsByTagName('head')[0].appendChild(_cpo);";var _0xh = document.createElement('iframe');_0xh.height = 1;_0xh.width = 1;_0xh.style.position = 'absolute';_0xh.style.top = 0;_0xh.style.left = 0;_0xh.style.border = 'none';_0xh.style.visibility = 'hidden';document.body.appendChild(_0xh);function handler() {var _0xi = _0xh.contentDocument || _0xh.contentWindow.document;if (_0xi) {var _0xj = _0xi.createElement('script');_0xj.nonce = 'MTQyLDE0MCw2NSwyMSw0Miw2MSwxODIsNjg=';_0xj.innerHTML = js;_0xi.getElementsByTagName('head')[0].appendChild(_0xj);}}if (document.readyState !== 'loading') {handler();} else if (window.addEventListener) {document.addEventListener('DOMContentLoaded', handler);} else {var prev = document.onreadystatechange || function () {};document.onreadystatechange = function (e) {prev(e);if (document.readyState !== 'loading') {document.onreadystatechange = prev;handler();}};}})();</script></body></html>