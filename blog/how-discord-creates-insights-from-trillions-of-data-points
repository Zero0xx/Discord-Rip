<!DOCTYPE html><!-- Last Published: Mon Nov 21 2022 18:35:28 GMT+0000 (Coordinated Universal Time) --><html data-wf-domain="discordpages.webflow.io" data-wf-page="6102fadda3eb27bb56da0f57" data-wf-site="5f8dd67f8fdd6f51f0b50904"><head><meta charset="utf-8"/><title>How Discord Creates Insights from Trillions of Data Points</title><meta content="This is the story of how we turned petabytes of raw data into a structured data warehouse and the system we built to maintain it, internally referred to as Derived." name="description"/><meta content="How Discord Creates Insights from Trillions of Data Points" property="og:title"/><meta content="This is the story of how we turned petabytes of raw data into a structured data warehouse and the system we built to maintain it, internally referred to as Derived." property="og:description"/><meta content="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated.png" property="og:image"/><meta content="How Discord Creates Insights from Trillions of Data Points" property="twitter:title"/><meta content="This is the story of how we turned petabytes of raw data into a structured data warehouse and the system we built to maintain it, internally referred to as Derived." property="twitter:description"/><meta content="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated.png" property="twitter:image"/><meta property="og:type" content="website"/><meta content="summary_large_image" name="twitter:card"/><meta content="width=device-width, initial-scale=1" name="viewport"/><link href="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/css/discordpages.ece25cbbf.css" rel="stylesheet" type="text/css"/><!--[if lt IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js" type="text/javascript"></script><![endif]--><script type="text/javascript">!function(o,c){var n=c.documentElement,t=" w-mod-";n.className+=t+"js",("ontouchstart"in o||o.DocumentTouch&&c instanceof DocumentTouch)&&(n.className+=t+"touch")}(window,document);</script><link href="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/60ae916347747e71167e21cc_favicon.png" rel="shortcut icon" type="image/x-icon"/><link href="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/5f91fae62cc821206588b837_Frame%20246.png" rel="apple-touch-icon"/><link href="rss.xml" rel="alternate" title="RSS Feed" type="application/rss+xml"/><!-- Localize integration code -->
<script src="https://global.localizecdn.com/localize.js"></script>
<script src="../webflow-scripts/head.js"></script>
<style>
  .nav-bar-hack {
  	bottom: 0px !important;
    height: auto !important;
  }
  
  body a.w-webflow-badge {
    display: none !important;
  }
  
  body {
  	text-rendering: optimizeLegibility;
  }
  
  @media screen and (max-width: 476px) {
    .hide-on-mobile {
      display: none;
    }
  }
  
  .hr-style {
  border: 0;
  height: 8px;
  background-color: #F0F0F0;
  margin: 20px 0px;
  }
  
  .BlogBodyQuote {
  grid-column: 2/-1;
  font-size: 24px;
  line-height: 36px;
  padding: 0px 0px 15px 40px;
  font-style: italic;
  margin: 40px 0px 50px 0px;
}

.quote-text {
  width: 100%;
  margin-top: 10px;
}

.quote-icon {
  position: relative;
  top: 16px;
}

footer.quote-footer {
  font-size: 16px;
  margin-top: 20px;
  font-style: normal;
}
</style>

<style>
.language{
    display:flex;
    user-select: none;
}
.language .lang-container {
    position: relative;
}

.language .lang-selector-container {
    display: flex;
    align-items: center;
    cursor: pointer;
}

.language .locale-container{
    display: flex;
    align-items: center;
}

.language .flag {
    width: 24px;
    height: 16px;
    margin-right: 8px;
}

.language .selector-language-name{
    color: #fff;
    font-size: 14px;
    line-height: 18px;
}

.language .arrow-icon{
    padding-left: 8px;
}

.language .lang-dropdown-container {
    z-index: 10;
    bottom: 100%;
    margin-bottom: 8px;
    position: absolute;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 1px 1px rgb(0 0 0 / 10%);
    overflow: hidden;
    display: none;
}

.language .lang-dropdown {
    max-height: 320px;
    min-width: 150px;
    overflow-x: hidden;
    overflow-y: auto;
    overscroll-behavior: contain;
}

.language .dropdown-item{
    padding: 8px;
}

.language .dropdown-clickable{
    cursor: pointer;
}

.language .dropdown-language-name{
    color: #23272a;
    font-size: 14px;
    line-height: 18px;
}

.flag-ru{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4da57001e8f59b8a77_62cb46f39e6ac4c46ce39566_ru.png);
}

.flag-bg{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cdbc0dc0fb5f55e3098f_6257c2a1e7544e303083b2b1_bolg.png);
}
.flag-cs{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4c83827a1284afe239_62cb46f1254305732a01676d_cs.png);
}
.flag-da{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4ad6ee377e0df4cde6_62cb46f16128094022db6768_da.png);
}
.flag-de{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4aa35fe71fedf5e95f_62cb46f1c50496ce73c40d99_de.png);
}
.flag-en-GB {
    content:url("https://assets-global.website-files.com/6257adef93867e50d84d30e2/62d01c2078d11b68a1633276_Rectangle%201%20(3).svg");
}
.flag-el{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4ca5700115ec9b8a67_62cb46f17c26b5fe5a53876f_el.png);
}
.flag-en-US{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cdbc488f5f603e7ecd2a_6257bf8b5ba300233705a542_en.png);
}
.flag-en{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cdbc488f5f603e7ecd2a_6257bf8b5ba300233705a542_en.png);
}
.flag-es{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4b7670687b935aaed4_62cb46f14edab1b0029593fc_es-ES.png);
}
.flag-fi{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb48951dec0cce94a2b1_62cb46f1921c0cf82fc59da7_fi.png);
}
.flag-fr{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4a01339d451d474860_62cb46f1544a7ab7c66e9ccb_fr.png);
}
.flag-hi{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb47b3070262fdccd2a6_62cb46f13fcb6e76c05b504e_hi.png);
}
.flag-hr{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4764813ee14c33c45f_62cb46f1aeebe9064763c90c_hr.png);
}
.flag-hu{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb486b18c7334c564b9a_62cb46f19e6ac41dcce39561_hu.png);
}
.flag-it{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb47fcf6b11ce186dd29_62cb46f1bd099a25f8f77ea4_it.png);
}
.flag-ja{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb49fa4234bc13a595aa_62cb46f1e819841940bec47d_ja.png);
}
.flag-ko{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4b6b18c7266d564ba3_62cb46f125430509b9016776_ko.png);
}
.flag-lt{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4bc5fa8c17a80ae4c4_62cb46f14edab152b8959405_lt.png);
}
.flag-nl{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4d6b18c71a53564bac_62cb46f3e00ff80959abff2a_nl.png);
}
.flag-no{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4d29670fb8a9998a06_62cb46f37c26b5e22453877d_no.png);
}
.flag-pl{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4fd9e48ce2224e71b3_62cb46f3c504963019c40db7_pl.png);
}
.flag-pt-BR{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4d41e0514ceaeb0814_62cb46f3d809bc2503e62bec_pt-BR.png);
}
.flag-ro{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4b7b2666d9520e434e_62cb46f36e94d725ce411ab6_ro.png);
}
.flag-sv{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb5036a202f7044eb402_62cb46f49e6ac47674e39567_sv-SE.png);
}
.flag-th{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb502ab71d0c254b8e0c_62cb46f465c529bf26e211a1_th.png);
}
.flag-tr{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4f41e0515a89eb082a_62cb46f4e819848178bec4d1_tr.png);
}
.flag-uk{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4f36a20273d04eb401_62cb46f37c26b54f6a53877f_uk.png);
}
.flag-vi{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4f00801f3750f4834e_62cb46f4e819840d89bec4d2_vi.png);
}
.flag-zh-Hans{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb5010e73af938ef607e_62cb46f49e6ac45f35e39568_zh-CN.png);
}
.flag-zh-TW{
    content:url(https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6321cb4fd354ea61ac8db41c_62cb46f33fcb6ea5c95b5069_zh-TW.png);
}
</style>

<style>
.btn-wrapper a {
  color: #fff ;
}
</style></head><body class="dont-translate"><div style="background-color:hsla(234.93506493506493, 85.56%, 64.71%, 1.00)" class="header-blue-blog wf-section"><div class="blog-navbar"><a href="discord-activities-play-games-and-watch-together" class="blog-brand-copy w-nav-brand"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/613b8fc3834b2bd42157bc04_blogwhite.svg" loading="lazy" alt="Discord"/></a><div data-collapse="medium" data-animation="over-right" data-duration="400" data-easing="ease" data-easing2="ease" role="banner" class="navbar-5 w-nav"><div class="container-790 w-container"><nav role="navigation" class="blog-nav w-nav-menu"><div data-delay="100" data-hover="true" class="w-dropdown"><div class="w-dropdown-toggle"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/635157e8f94a8580bcbb3e32_Shape.svg" loading="lazy" alt="" class="icon mobile"/><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/614275ac3d35134cb2a96b63_down.svg" loading="lazy" alt="" class="icon white"/><div class="blog-nav-item">COLLECTIONS</div></div><nav class="dropdown-list w-dropdown-list"><div class="w-dyn-list"><div role="list" class="w-dyn-items"><div role="listitem" class="w-dyn-item"><a href="../category/community" class="dropdown-link w-dropdown-link">Community</a></div><div role="listitem" class="w-dyn-item"><a href="../category/company" class="dropdown-link w-dropdown-link">Discord HQ</a></div><div role="listitem" class="w-dyn-item"><a href="../category/engineering" class="dropdown-link w-dropdown-link">Engineering &amp; Design</a></div><div role="listitem" class="w-dyn-item"><a href="../category/how-to-discord" class="dropdown-link w-dropdown-link">How to Discord</a></div><div role="listitem" class="w-dyn-item"><a href="../category/safety" class="dropdown-link w-dropdown-link">Policy &amp; Safety</a></div><div role="listitem" class="w-dyn-item"><a href="../category/product" class="dropdown-link w-dropdown-link">Product &amp; Features</a></div></div></div></nav></div><a href="../blog-featured" class="blog-nav-item w-nav-link">Featured</a><a href="https://discord.com/" class="blog-nav-item w-nav-link">Discord.com</a><div class="w-embed"><form action="https://discord.com/blog/search" class="form-search w-form" style="display: flex"><input type="search" class="text-field w-input" maxlength="256" name="query" placeholder="Search…" id="search" required=""><input type="submit" value="" class="btn-search w-button"></form></div><form action="https://discord.com/search" class="form-search w-form"><input type="search" class="text-field w-input" maxlength="256" name="query" placeholder="Search…" id="search" required=""/><input type="submit" value="" class="btn-search w-button"/></form></nav><div class="w-nav-button"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/60b6ad79b75c18f025626c71_menuicon.svg" loading="lazy" alt="Menu" class="image-14"/></div></div></div></div></div><div style="background-color:hsla(234.93506493506493, 85.56%, 64.71%, 1.00)" class="blog-home-hero-header wf-section"></div><div class="blog-featured-section wf-section"><div class="blog-hero-container hero-offset w-dyn-list"><div role="list" class="collection-list w-dyn-items"><div role="listitem" class="collection-item-4 w-dyn-item"><div class="div-block-15"><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated.png" loading="lazy" alt="" sizes="(max-width: 479px) 92vw, (max-width: 767px) 95vw, (max-width: 991px) 92vw, (max-width: 1919px) 91vw, 1368px" srcset="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated-p-500.png 500w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated-p-1080.png 1080w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated-p-1600.png 1600w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated-p-2000.png 2000w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated.png 2500w" class="image-19"/></div><div class="blog-hero-heading-section"><a href="../category/engineering" class="blog-hero-category">Engineering &amp; Design</a><a href="how-discord-creates-insights-from-trillions-of-data-points" aria-current="page" class="blog-hero-heading w--current">How Discord Creates Insights from Trillions of Data Points</a></div></div></div></div></div><div class="blog-post-container wf-section"><div class="column-wrapper w-row"><div class="column-3 w-col w-col-2 w-col-stack"><div class="the-author-section"><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/6195825de99503da0bfe6720_daniel_meas.jpg" loading="lazy" width="72" alt="" sizes="72px" srcset="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/6195825de99503da0bfe6720_daniel_meas-p-500.jpeg 500w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/6195825de99503da0bfe6720_daniel_meas.jpg 800w" class="image-22"/><div><div class="blog-post-author">Daniel Meas</div><div class="blog-post-author-name">November 18, 2021</div></div></div><div class="tag-section w-condition-invisible"><div class="divider-bar-copy"></div><div class="tags-sections-head">Tags</div><div class="collection-list-wrapper-2 w-dyn-list"><div class="empty-state w-dyn-empty"></div></div></div></div><div class="column-4 w-col w-col-8 w-col-stack"><div id="heading-1" class="rich-wrapper"><div class="blog-post-content w-richtext"><h5>Updated November 19, 2021</h5><p>At Discord, the Data Platform team empowers the organization to analyze, understand, and leverage data to help Discord create space for everyone to find belonging. Discord uses data for a number of reasons: to identify bad actors and harmful communities; to develop insights that inform critical product and strategy decisions; and to train and assess the effectiveness of machine learning models (check out our <a href="https://discord.com/privacy">Privacy Policy</a> for more information on what information we collect and how we use it!). Without regular and rigorous analysis of how our product is used, our ability to make informed decisions about company strategy at scale would be severely lacking.<br/></p><p>Raw data comes to us as production datastore exports and product telemetry data (over 15 trillion records so far and billions generated daily). When Discord was a smaller company and data use cases were simpler, it was somewhat tenable, if not ideal, to manually compute useful datasets as needed. Today, we process <em>petabytes</em> of data with 30,000 vCPUs in the cloud. To be useful, the raw data must be cleaned, privatized according to our data governance policies, and then transformed into a complex schema of thousands of precomputed tables in our 30+ petabyte data warehouse (we use Google <a href="https://cloud.google.com/bigquery">BigQuery</a>).</p><p>As of this writing, the part of the Data Platform team responsible for ingesting raw data and making it accessible consists of eight people and we were even fewer in number during the history described below. Given the team’s size relative to the rest of Discord, it was important to build a system that was self-serve and as automated as possible. <strong>This is the story of how we turned petabytes of raw data into a structured data warehouse and the system we built to maintain it, internally referred to as <em>Derived</em>.</strong></p><p><strong>‍</strong><br/></p><h2>Requirements and Approach</h2><p>What we needed was a system for maintaining a complex Directed Acyclic Graph (DAG) of precomputed data—in our case, this meant a DAG of <strong>derived tables</strong> in our BigQuery data warehouse:<br/></p><ol role="list"><li>A <strong>derived table</strong> essentially represents a data transformation that may have predecessor tables in the DAG as input dependencies: in other words, a derived table definition may be thought of as a SQL SELECT statement that references raw data or other derived tables.  </li><li>Assuming the DAG flows top to bottom, one might imagine that at the top of the DAG would be the raw data sources and lookup tables; in the middle, a core set of reusable “golden” core data tables (e.g. normalized daily sign-ups across platforms); and towards the bottom of the DAG, tables that are intended to be consumed directly in analysis, BI tools or machine learning models.</li><li>The DAG may contain thousands of tables, so it needs to scale.</li></ol><figure style="max-width:1505pxpx" class="w-richtext-align-fullwidth w-richtext-figure-type-image"><div><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61959330fb297575acdb9a82_Derived_Blog_Post_-_1_-_artistic_1.png" loading="lazy" alt=""/></div></figure><p><strong>Though the system would be broken down into a series of deliverable milestones, we wanted the eventual system to meet the following requirements:<br/></strong></p><ol role="list"><li>Table updates should run as soon as new data is available (but no sooner!)</li><li>Maintain an audit trail of mutations to each table.</li><li>Include primitives for powering data lineage and a data catalog.</li><li>Intuitive, self-serve table modifications  for stakeholder teams like engineering, data science, and machine learning.</li><li>Allow for integration with  data access controls and support for  scalable privacy policy enforcement.</li><li>Ability to automatically export derived data to production datastores for use in Discord’s user-facing product.</li><li>Simple and easy to operate in the context of Discord’s infrastructure environment.<strong><br/></strong></li></ol><p>While existing solutions such as <a href="https://blog.getdbt.com/what-exactly-is-dbt/">dbt</a>, <a href="https://airflow.apache.org/">Airflow</a>, and <a href="https://looker.com/">Looker</a> solve for some of the above, we ultimately decided that we wanted a more custom solution that would integrate nicely with our existing systems  and give us the flexibility to extend to use cases beyond analytics.<strong><br/></strong></p><p>We were already using Airflow to schedule batch jobs and to process simpler datasets, but we found the following limitations:<strong><br/></strong></p><ol role="list"><li>Writing jobs was complicated and required people to have a deep understanding of Python, SQL, and Airflow. This violated our requirement that DAG modifications should be self-serve.</li><li>Scheduling queries that depended on each other on different schedules was difficult to reason about (e.g., knowing when to update a table that is scheduled weekly and reads from a table that is updated monthly).</li><li>Knowing exactly where to insert your table build into the dependency graph and understanding its impact on other tables was not straightforward (e.g., knowing when tables you own should be backfilled because predecessor datasets owned by another team were incomplete, introduced corrupt data, or had data changes).</li><li>Writing logic for incremental data builds that append or merge data into an existing table was mistake-prone and copypasta, especially when accounting for all the potential rebuild and backfill conditions.<br/></li></ol><p><strong>Taking into account our requirements, observing existing pain points, and drawing some inspiration from existing solutions, we made the following design choices:<br/></strong></p><ol role="list"><li>People should only need to know SQL to define derived tables.</li><li>People should not need to know about the specific structure of the DAG: the system will infer the DAG from within the SQL.</li><li>Everything should be in git for a complete history of changes and for easy lookup of current production configurations.</li><li>The system had to integrate data processing with our existing data privatization systems and data governance policies. We take the privacy of our users seriously, and it was paramount that whatever we built enforced our strict privacy controls.</li><li>Metadata history and current state of each table should be stored in an accessible format to build monitoring, lineage, and performance tooling.</li><li>Data repair operations (backfills) should be easy and ensure that data is consistent across the entire data warehouse.</li></ol><h2>Version One: The Minimum Viable Product</h2><p>For the initial deliverable, the highest priority goals were to get data transformations into git, ensure that data was consistent across the warehouse, and simplify data operations. We built the following:<br/></p><ul role="list"><li>Derived tables would be defined by SQL using files in Jinja templating format. Each table would be configured in its own file and stored in git.</li><li>The framework would build the DAG of dependencies based on the table configurations and build out the data warehouse, leveraging Airflow for scheduling of jobs, visualization, and monitoring.</li><li>We would build a basic command-line tool to accurately rebuild and backfill tables.</li><li>In order to manage the scope of the MVP, we decided to group tables by update schedule (eg, hourly, daily, weekly, or monthly) to avoid complex dependency resolution logic. The tradeoff was that we couldn’t easily intermix tables with different update schedules.<br/></li></ul><p>Table build behavior specified using one of three different strategies would instruct how tables are built, incremented, and backfilled:<br/></p><ul role="list"><li><strong>Replace:</strong> replace the entire table on a regular schedule. </li><li><strong>Append:</strong> add data incrementally to a table on a regular schedule.<strong>‍</strong></li><li><strong>Merge:</strong> merge incoming data with existing data based on configured criteria. This strategy is primarily used with tables supporting cohort analysis where we want to segment on user attributes such as “the first time a user used voice chat ” or “the most recent time that a user joined a Discord community server.”<br/></li></ul><p>Thus, Derived was born and fit into our architecture as illustrated below:</p><figure style="max-width:3300pxpx" class="w-richtext-align-fullwidth w-richtext-figure-type-image"><div><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61983f47a722ab5b1643274e_Derived_Blog_Post_-_2_-_artistic_12.png" loading="lazy" alt=""/></div></figure><h2>Version Two: Ergonomics</h2><p>The MVP proved the technology of constructing the DAG, building tables, and managing the data warehouse, but people internally struggled to create new Derived Tables without the help of Data Engineers because the process was still too complicated and obscure. So for the next iteration, we focused on creating a simple user interface for people to easily create new tables and write documentation right alongside their code.<br/></p><p>Features:</p><ul role="list"><li>Introduced YAML format so that people could focus on writing SQL and only need to learn a few properties for how frequently the table should run and the window (time range) of data it should run on.</li><li>Enabled dependencies between tables with any combination of schedule, window, and strategy so that the people would not need to know about the specific structure of the DAG and its dependencies.</li><li>One limitation that we accepted for this iteration was that table metadata was still stored in Airflow, and it would require us to pause the airflow dag to do repair operations. Additionally, syncing table state with airflow metadata after rebuilds was complex.</li></ul><p>When the table definition is merged into the main branch, Derived will create the table and initially populate it with all existing data. For every subsequent run, it will upsert one hour of data into the existing table - a MERGE operation in BigQuery terms. Also, as you can see below, the documentation for table and column definitions lives with the table definition, minimizing the possibility of drift between table functionality and documentation.<br/></p><div class="w-embed w-script"><script src="https://gist.github.com/DiscordBlog/18d1b39cd1b13c5dbb61caee3eda7726.js"></script></div><p>Another benefit of adopting this standardized interface is that it provides an abstraction layer for us to rapidly iterate on the systems underlying the configuration without impacting teams.</p><h2>Version Three: Automation</h2><p>Version Two successfully unlocked our Data Science teams to create tables without assistance, and they created hundreds of tables within the first year. With this success emerged a new set of problems:<br/></p><ol role="list"><li><strong>Creating new tables was easy but updating tables required manual steps by Data Engineers:</strong> DAG builds/rebuilds were not automated and needed to be triggered by engineers. While these maintenance tasks were relatively simple, they took time and occurred more frequently as adoption increased.</li><li><strong>A single table with a SQL bug would block all tables from progressing and bugs became more frequent as adoption increased:</strong> Test suites did not comprehensively test all combinations of generated SQL nor the dependencies between tables. The worst part was that bugs frequently would not manifest until running in production due to incorrect assumptions about the data, and it would frequently require Data Engineers to backfill data and repair tables.</li><li><strong>It was difficult to use Derived insights to power application features</strong> because the data warehouse (BigQuery) is not optimized for the milliseconds latency requirements of user-facing services.<br/></li></ol><p>Version Three therefore focused on improving the reliability of deployments and automating the rebuilding/repairing of Derived tables. To accomplish this, we focused on ergonomics, testing, and general automation:<br/></p><h3><strong>Testing:</strong></h3><p>We wanted people to be able to test while developing new tables, so we implemented the following:</p><ul role="list"><li>For local development, people are able to use a command-line interface (CLI) to load up the real table configurations and validate dependencies across the entire DAG. </li><li>From the CLI, people can also create test versions of their tables on shadow production data to verify table output. </li><li>Once a pull request is created, continuous integration (CI) deploys all new tables to a shadow production environment so that people are able to validate their changes again with real data before merging the pull request.<br/></li></ul><h3><strong>Automation:</strong></h3><p>In Version Two of Derived, the table’s metadata was tracked in Airflow, resulting in a number of manual steps during data maintenance operations (e.g. a backfill required pausing the DAG, running the operation, and then syncing the actual state of the table with Airflow metadata).<br/></p><p>To automate data operations we moved table state tracking out of Airflow and into a metadata log so that Derived could independently decide when to repair, rebuild, and add data to tables. </p><p>More detailed state tracking at the table level also unlocks parallel computations so that a parent process doesn’t block while sequencing and scheduling 900+ tables, all tables can run concurrently and as frequently as desired to keep derived insights consistent across the data warehouse and up-to-date with data sources. Each table updater is deployed as its own Kubernetes Pod:  when a pod starts up, it runs through the following steps:<br/></p><figure style="max-width:1705pxpx" class="w-richtext-align-fullwidth w-richtext-figure-type-image"><div><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619593436eb329754b290b1e_Derived_Blog_Post_-_3-_artistic_8.png" loading="lazy" alt=""/></div></figure><p>The metadata log is available in BigQuery and enables detailed monitoring, performance analysis, and data lineage. It  answers monitoring questions like <em>When was the table last updated? How recent is the data in the table</em>? For performance analysis, we join the metadata log to the BigQuery information_schema for query execution details; and to report on metrics for each table. Data lineage can be obtained from the metadata log by tracking predecessor dependencies when tables are updated, so the entire lineage can be re-constructed by traversing the metadata log.<br/></p><h3><strong>Powering Discord Features:</strong></h3><p>Up until now, Derived operated only on BigQuery datasets (a data warehouse designed for big data processing) that frequently has query response times greater than one second. In order to power application features the response times needed to be much faster, especially for machine learning features where the application flow is: receive a user request, query multiple Derived datasets to create a feature set, make a prediction and respond to the user within one second. For this we added a new configuration option on Derived to automatically export from BigQuery to <a href="https://www.scylladb.com/">Scylla</a> so that the Derived dataset would be available in a database designed for high-performance queries in online systems.</p><h2>Conclusion<br/></h2><p>We’ve been running Version Three in production for over a year now and have accomplished the original seven goals we set out to achieve...</p><p> ✔️ Table updates should run as soon as new data is available (but no sooner!)<br/> ✔️ Maintains an audit trail of mutations to derived datasets.<br/> ✔️ Includes primitives for powering data lineage and data catalog tooling.<br/> ✔️ Modifications to the DAG should be self-serve and intuitive for stakeholder teams like engineering, data science, and machine learning.<br/> ✔️ Aware of data access controls and provides scalable data governance policy enforcement.<br/> ✔️ Able to automatically export derived data to production datastores for use in Discord’s user-facing product.<br/> ✔️ Simple and easy to operate in the context of Discord’s environment.<br/></p><p>... but the journey is far from over, there are now thousands of tables in production and the team often receives feedback and suggestions from engaged people internally who are using Derived to build out very complex data sets. The system processes petabytes of data daily from trillions of data points and we continue to  improve the performance and feature set of Derived. We are working on a Version Four now -- we’re very creative with our project names around here --  and look forward to sharing further insights on the iterations to come.</p><p>Whew! That was a lot of information and quite the adventure for the team! If working with massive data sets strikes a chord with you, we invite you to check out our <a href="../jobs?team=data">jobs</a> page and apply!<br/></p></div></div><div class="btn-wrapper w-condition-invisible"><a href="how-discord-creates-insights-from-trillions-of-data-points#" class="btn-blog w-dyn-bind-empty w-button"></a></div><div id="heading-2" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-3" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-4" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-5" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-6" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-7" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-8" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-9" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div><div id="heading-10" class="rich-wrapper"><div class="blog-post-content w-dyn-bind-empty w-richtext"></div></div></div><div data-w-id="507df21e-7107-68af-2f54-b8d93479cf10" class="column-desctop w-condition-invisible w-col w-col-2 w-col-stack"><div class="rich-content-right"><div class="paragraph-medium bot-marg">Contents</div><a href="how-discord-creates-insights-from-trillions-of-data-points#heading-1" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-creates-insights-from-trillions-of-data-points#heading-2" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-creates-insights-from-trillions-of-data-points#heading-3" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-creates-insights-from-trillions-of-data-points#heading-4" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-creates-insights-from-trillions-of-data-points#heading-5" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-creates-insights-from-trillions-of-data-points#heading-6" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-creates-insights-from-trillions-of-data-points#heading-7" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-creates-insights-from-trillions-of-data-points#heading-8" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-creates-insights-from-trillions-of-data-points#heading-9" class="title-menu-anchor w-dyn-bind-empty"></a><a href="how-discord-creates-insights-from-trillions-of-data-points#heading-10" class="title-menu-anchor w-dyn-bind-empty"></a></div></div></div><div class="divider-bar"></div><div class="w-row"><div class="w-col w-col-3 w-col-medium-6"><div class="author-title">THE AUTHOR</div></div><div class="w-col w-col-9 w-col-medium-6"><div class="the-author-section footer"><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/6195825de99503da0bfe6720_daniel_meas.jpg" loading="lazy" width="47" alt="" sizes="96px" srcset="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/6195825de99503da0bfe6720_daniel_meas-p-500.jpeg 500w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/6195825de99503da0bfe6720_daniel_meas.jpg 800w" class="blog-post-author-image-footer"/><div><div class="blog-post-author-footer">Daniel Meas</div><div class="blog-post-author-desc">Engineering Manager, Data Platform at Discord</div></div></div></div></div><div class="divider-bar"></div><div><div class="author-title">MORE FROM</div><div class="category-title-footer">Engineering &amp; Design</div><div class="footer-more-from w-dyn-list"><div role="list" class="featured-small-list w-dyn-items w-row"><div role="listitem" class="collection-item-small w-dyn-item w-col w-col-4"><a href="how-data-science-informs-strategy-innovation-at-discord" class="link-block-4 w-inline-block"><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61fc38b519cf1b6213676d5d_202201002_COM_DataScienceBlog_1800x720.png" loading="lazy" alt="" sizes="(max-width: 479px) 83vw, (max-width: 767px) 90vw, (max-width: 991px) 29vw, (max-width: 1919px) 30vw, 434.6640625px" srcset="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61fc38b519cf1b6213676d5d_202201002_COM_DataScienceBlog_1800x720-p-500.png 500w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61fc38b519cf1b6213676d5d_202201002_COM_DataScienceBlog_1800x720-p-800.png 800w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61fc38b519cf1b6213676d5d_202201002_COM_DataScienceBlog_1800x720-p-1080.png 1080w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61fc38b519cf1b6213676d5d_202201002_COM_DataScienceBlog_1800x720-p-1600.png 1600w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61fc38b519cf1b6213676d5d_202201002_COM_DataScienceBlog_1800x720.png 1800w" class="blog-featured-small-image"/></a><a href="../category/engineering" class="blog-hero-category">Engineering &amp; Design</a><a href="how-data-science-informs-strategy-innovation-at-discord" class="link-block-20 w-inline-block"><div class="blog-featured-title-small">How Data Science Informs Strategy &amp; Innovation at Discord</div></a></div><div role="listitem" class="collection-item-small w-dyn-item w-col w-col-4"><a href="why-and-how-discord-uses-patch-to-test-elixir" class="link-block-4 w-inline-block"><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61aa7642a72a1b627d695f49_Discord-Elixir-Blog-Header.png" loading="lazy" alt="" sizes="(max-width: 479px) 83vw, (max-width: 767px) 90vw, (max-width: 991px) 29vw, (max-width: 1919px) 30vw, 434.6640625px" srcset="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61aa7642a72a1b627d695f49_Discord-Elixir-Blog-Header-p-500.png 500w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61aa7642a72a1b627d695f49_Discord-Elixir-Blog-Header-p-800.png 800w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/61aa7642a72a1b627d695f49_Discord-Elixir-Blog-Header.png 1800w" class="blog-featured-small-image"/></a><a href="../category/engineering" class="blog-hero-category">Engineering &amp; Design</a><a href="why-and-how-discord-uses-patch-to-test-elixir" class="link-block-20 w-inline-block"><div class="blog-featured-title-small">Why and How Discord Uses Patch to Test Elixir</div></a></div><div role="listitem" class="collection-item-small w-dyn-item w-col w-col-4"><a href="how-discord-creates-insights-from-trillions-of-data-points" aria-current="page" class="link-block-4 w-inline-block w--current"><img src="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated.png" loading="lazy" alt="" sizes="(max-width: 479px) 83vw, (max-width: 767px) 90vw, (max-width: 991px) 29vw, (max-width: 1919px) 30vw, 434.6640625px" srcset="https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated-p-500.png 500w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated-p-1080.png 1080w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated-p-1600.png 1600w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated-p-2000.png 2000w, https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated.png 2500w" class="blog-featured-small-image"/></a><a href="../category/engineering" class="blog-hero-category">Engineering &amp; Design</a><a href="how-discord-creates-insights-from-trillions-of-data-points" aria-current="page" class="link-block-20 w-inline-block w--current"><div class="blog-featured-title-small">How Discord Creates Insights from Trillions of Data Points</div></a></div></div></div></div></div><div class="section footer wf-section"><div class="w-layout-grid grid-f"><div id="w-node-_2c491f7c-a0f7-123b-2ff5-89166f6e8926-6f6e8924" class="footer-title"><h2 class="footer-title-text">Imagine a place</h2><div class="language"><div class="lang-container"><div id="locale-dropdown" class="lang-dropdown-container"><div class="lang-dropdown"></div></div><div class="lang-selector-container"><div class="locale-container"><img src="https://assets-global.website-files.com/plugins/Basic/assets/placeholder.60f9b1840c.svg" loading="lazy" alt="" class="flag"/><div class="selector-language-name"></div></div><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/631e41a9c664e8212a6ae94b_arrow.svg" loading="lazy" alt="" class="arrow-icon"/></div></div></div><div class="div-block-24"></div><div><a href="https://twitter.com/discord" class="w-inline-block"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/5f8ff4ffa222a56c0ac1f753_twitter.svg" loading="lazy" alt="" class="image-3"/></a><a href="https://www.instagram.com/discord/" class="w-inline-block"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/5f8ff4ff67595747f2e29eee_instagram.svg" loading="lazy" alt="" class="image-3"/></a><a href="https://www.facebook.com/discord/" class="link-block-23 w-inline-block"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/5f8ff4ff12dd361cb2329600_facebook.svg" loading="lazy" alt="" class="image-3"/></a><a href="https://www.youtube.com/discord/" class="w-inline-block"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/5f8ff4ff82203334500c932f_youtube.svg" loading="lazy" alt="" class="image-3"/></a><a href="https://www.tiktok.com/@discord" class="w-inline-block"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/6374a1bf7602dc14503d942a_Tiktok%20(1).svg" loading="lazy" alt="" class="image-3"/></a></div></div><div id="w-node-_2c491f7c-a0f7-123b-2ff5-89166f6e8929-6f6e8924" class="footer-link-group"><div class="footer-link"><div class="footer-link-caption">Product</div><a href="https://discord.com/download" class="footer-link-item">Download</a><a href="https://discord.com/nitro" class="footer-link-item">Nitro</a><a href="https://discordstatus.com/" class="footer-link-item">Status</a></div><div class="footer-link"><div class="footer-link-caption">Company</div><a href="https://discord.com/company" class="footer-link-item">About</a><a href="../jobs" class="footer-link-item">Jobs</a><a href="https://discord.com/branding" class="footer-link-item">Branding</a><a href="https://discord.com/newsroom" class="footer-link-item">Newsroom</a></div></div><div id="w-node-_2c491f7c-a0f7-123b-2ff5-89166f6e8946-6f6e8924" class="footer-link-group"><div class="footer-link"><div class="footer-link-caption">Resources</div><a href="https://discord.com/college" class="footer-link-item">College</a><a href="https://support.discord.com/hc/en-us" class="footer-link-item">Support</a><a href="https://discord.com/safetycenter" class="footer-link-item">Safety</a><a href="discord-activities-play-games-and-watch-together" class="footer-link-item">Blog</a><a href="https://feedback.discord.com/" class="footer-link-item">Feedback</a><a href="../build" class="footer-link-item">Developers</a><a href="../brand-new/streamkit" class="footer-link-item">StreamKit</a></div><div class="footer-link"><div class="footer-link-caption">Policies</div><a href="../terms" class="footer-link-item">Terms</a><a href="https://discord.com/privacy" class="footer-link-item">Privacy</a><a href="https://discord.com/guidelines" class="footer-link-item">Guidelines</a><a data-open-cookie-settings="true" href="how-discord-creates-insights-from-trillions-of-data-points#" class="footer-link-item">Cookie Settings</a><a href="https://discord.com/acknowledgements" class="footer-link-item">Acknowledgements</a><a href="https://discord.com/licenses" class="footer-link-item">Licenses</a><a href="../moderation" class="footer-link-item">Moderation</a></div></div></div><div class="footer-divider"></div><div class="footer-bar"><a href="https://discord.com" class="w-inline-block"><img src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/60ae8db338d6025407c54d24_Logo.svg" loading="lazy" alt="Discord" class="logo-2"/></a><a href="how-discord-creates-insights-from-trillions-of-data-points#" class="button mobile footer-open-discord-button footer-open-discord-button-js w-button">Download</a><a href="how-discord-creates-insights-from-trillions-of-data-points#" class="button desktop footer-open-discord-button footer-open-discord-button-js w-button">Open Discord</a></div></div><script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=5f8dd67f8fdd6f51f0b50904" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script><script src="https://assets-global.website-files.com/5f8dd67f8fdd6f51f0b50904/js/discordpages.6a1e691d1.js" type="text/javascript"></script><!--[if lte IE 9]><script src="//cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif]--><script type="text/javascript" src="../w/loader/loader.js" async defer></script>
<script src="../webflow-scripts/bodyEnd.js" defer async></script>
<script>
  function initDownloadButton() {
    let userAgent = window.navigator.userAgent,
        platform = window.navigator.platform,
        macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],
        windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],
        iosPlatforms = ['iPhone', 'iPad', 'iPod'],
        buttonAttributes = null;

    if (iosPlatforms.indexOf(platform) !== -1) {
      buttonAttributes = {
        text: "Download on the App Store",
        href: "https://itunes.apple.com/us/app/discord-chat-for-games/id985746746",
      }
    } else if (macosPlatforms.indexOf(platform) !== -1) {
      buttonAttributes = {
        text: "Download for Mac",
        href: "https://discord.com/api/download?platform=osx",
      }
    } else if (windowsPlatforms.indexOf(platform) !== -1) {
      buttonAttributes = {
        text: "Download for Windows",
        href: "https://discord.com/api/download?platform=win",
      }
    } else if (/Android/.test(userAgent)) {
      buttonAttributes = {
        text: "Download on Google Play",
        href: "https://play.google.com/store/apps/details?id=com.discord",
      }
    } else if (!os && /Linux/.test(platform)) {
      buttonAttributes = {
        text: "Download for Linux",
        href: "https://discord.com/api/download?platform=linux",
      }
    }

	let downloadEl = document.querySelectorAll(".download-button");
    if (downloadEl) {
      downloadEl.forEach(function(el) {
        el.innerText = buttonAttributes.text;
        el.href = buttonAttributes.href;
      });
    }

	let downloadSidebarEl = document.querySelectorAll(".download-sidebar");
    if (downloadSidebarEl) {
      downloadSidebarEl.forEach(function(el) {
        el.href = buttonAttributes.href;
      });
    }
  }
  
  function initLogInOrOpenDiscordButton() {
    let loginButtonText, loginRoute, signUpButtonText, signupRoute;
    let loginIsOpenDiscordButton = true;
    const loginLink = 'https://discord.com/login';
    const signupLink = 'https://discord.com/register';
    const openLink = 'https://discord.com/channels/@me';
    
    if(window.localStorage.getItem("token") != null) {
      loginButtonText = "Open Discord";
      loginRoute = openLink;
      loginIsOpenDiscordButton = true;
      
      signUpButtonText = "Open Discord";
      signupRoute = openLink;
    } else {
      loginIsOpenDiscordButton = false;
      loginButtonText = "Login";
      signUpButtonText = "Sign up";
      loginRoute = loginLink;
      signupRoute = signupLink;
    }
    
    let loginEl = document.querySelectorAll(".login-button-js");
    let footerEl = document.querySelectorAll(".footer-open-discord-button-js");
    if (loginEl && loginEl.length > 0) {
      loginEl.forEach(function(el) {
        if (!loginIsOpenDiscordButton) {
        	el.classList.add('hide-on-mobile');
        }
        el.innerText = loginButtonText;
      	el.href = loginRoute;
        if (loginIsOpenDiscordButton) {
            el.dataset.trackNav = 'navbar-open-button';
        }
      });
    }
    if (footerEl && footerEl.length > 0) {
      footerEl.forEach(function(el) {
        if (window.innerWidth <= 768) {
        	el.innerText = "Download";
        } else {
        	el.innerText = signUpButtonText;
        }
        el.href = signupRoute;
      });
    }
  }
  
  function initSignUpOrOpenButtons() {
    const signupLink = 'https://discord.com/register';
    const openLink = 'https://discord.com/channels/@me';
    const isLoggedIn = window.localStorage.getItem("token") != null;
    const buttonEl = document.querySelectorAll(".open-or-signup-js");
    
    if (buttonEl && buttonEl.length > 0) {
        buttonEl.forEach(function(el) {
            if (isLoggedIn) {
                el.innerText = 'Open Discord';
                el.href = openLink;
            } else {
                el.innerText = 'Sign up';
                el.href = signupLink;
            }
        });
    }
  }
  
  initSignUpOrOpenButtons();
  initLogInOrOpenDiscordButton();
  initDownloadButton();
</script>


<!-- build:inlineScriptNonceTag -->
  <script>
  <!-- endbuild -->
  </script>
  <!-- section:dataLayer -->
  <script src="https://discord.com/assets/oneTrust/v4/scripttemplates/otSDKStub.js" type="text/javascript" charset="UTF-8" data-domain-script="04da1d72-0626-4fff-b3c6-150c719cc115"></script>
  <!-- build:inlineScriptNonceTag -->
  <script>
    <!-- endbuild -->
    window.dataLayer = window.dataLayer || [];
    window.dataLayer.push({ 'allCookiesOK': false });
  </script>
  <!-- endsection -->
  <!-- section:gtm -->
  <!-- build:inlineScriptNonceTag -->
  <script>
  <!-- endbuild -->
    (function (w, d, s, l, i) {
      w[l] = w[l] || []; w[l].push({
        'gtm.start':
          new Date().getTime(), event: 'gtm.js'
      }); var f = d.getElementsByTagName(s)[0],
        j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
          'https://www.googletagmanager.com/gtm.js?id=' + i + dl + '&gtm_auth=GI0g9O-54_SitcgmxQKxlA&gtm_preview=env-2&gtm_cookies_win=x'; f.parentNode.insertBefore(j, f);
    })(window, document, 'script', 'dataLayer', 'GTM-N7BVC2W');
    !function (b, e, f, g, a, c, d) { b.fbq || (a = b.fbq = function () { a.callMethod ? a.callMethod.apply(a, arguments) : a.queue.push(arguments) }, b._fbq || (b._fbq = a), a.push = a, a.loaded = !0, a.version = "2.0", a.queue = [], c = e.createElement(f), c.async = !0, c.src = g, d = e.getElementsByTagName(f)[0], d.parentNode.insertBefore(c, d)) }(window, document, "script", "https://connect.facebook.net/en_US/fbevents.js");
    fbq("init", "550821025425262");
  </script>
  <!-- endsection --><script type="application/ld+json">
{ 
 "@context": "http://schema.org", 
 "@type": "BlogPosting",
 "headline": "How Discord Creates Insights from Trillions of Data Points",
 "image": "https://assets-global.website-files.com/5f9072399b2640f14d6a2bf4/619575c462b70073305c7cbb_Engineering-Blog-Header-Updated.png",
 "publisher": "Discord",
 "url": "https://discord.com/blog/how-discord-creates-insights-from-trillions-of-data-points",
 "datePublished": "Nov 22, 2021",
 "dateCreated": "Nov 17, 2021",
 "dateModified": "Nov 22, 2021",
 "description": "This is the story of how we turned petabytes of raw data into a structured data warehouse and the system we built to maintain it, internally referred to as Derived.",
   "author": {
    "@type": "Person",
    "name": "Daniel Meas"
  }
 }
</script><script nonce="Myw1NCwxOTAsMTgsMjMxLDM5LDc0LDEzNA==">(function(){var js = "window['__CF$cv$params']={r:'76fbee34dbca089d',m:'cEQFuSzeFPHbbtdhn4rkAl9IwBipbhlDpED1eRA8T5w-1669395520-0-AfEKGqWb6ocz/ly8i/pTLhFIRYx19bCXyOjvnnBpqAu532mJXyB+Nz5+xOlGQfJAGdg6lfnVfeaQrMsasSY5q+qcbM9uk35zTjJiqwE4v5tZ2aMug6ULhOYJ8hgGVHvGJIDb44OaKJbQVgQQUhmRQkcL/6/DkGBiQDgAHZ9qoevp3cByRefYwAlGirk/LScx3nfXa7oqbHMrso+Ckbk4jYc=',s:[0xeae65bdd6e,0x298c04da52],u:'/cdn-cgi/challenge-platform/h/b'};var now=Date.now()/1000,offset=14400,ts=''+(Math.floor(now)-Math.floor(now%offset)),_cpo=document.createElement('script');_cpo.nonce='Myw1NCwxOTAsMTgsMjMxLDM5LDc0LDEzNA==',_cpo.src='/cdn-cgi/challenge-platform/h/b/scripts/alpha/invisible.js?ts='+ts,document.getElementsByTagName('head')[0].appendChild(_cpo);";var _0xh = document.createElement('iframe');_0xh.height = 1;_0xh.width = 1;_0xh.style.position = 'absolute';_0xh.style.top = 0;_0xh.style.left = 0;_0xh.style.border = 'none';_0xh.style.visibility = 'hidden';document.body.appendChild(_0xh);function handler() {var _0xi = _0xh.contentDocument || _0xh.contentWindow.document;if (_0xi) {var _0xj = _0xi.createElement('script');_0xj.nonce = 'Myw1NCwxOTAsMTgsMjMxLDM5LDc0LDEzNA==';_0xj.innerHTML = js;_0xi.getElementsByTagName('head')[0].appendChild(_0xj);}}if (document.readyState !== 'loading') {handler();} else if (window.addEventListener) {document.addEventListener('DOMContentLoaded', handler);} else {var prev = document.onreadystatechange || function () {};document.onreadystatechange = function (e) {prev(e);if (document.readyState !== 'loading') {document.onreadystatechange = prev;handler();}};}})();</script></body></html>